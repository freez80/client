box: golang:1.7

build:
  steps:
     # Store the original source dir so we can pass the file to deploy
    - script:
      name: provide chance for deployment
      code: |
        export ORG_SOURCE=$WERCKER_SOURCE_DIR

    - wercker/setup-go-workspace:
      package-dir: github.com/screwdriver-cd/client

    - script:
      name: Install go-swagger
      code: |
        cd $WERCKER_SOURCE_DIR
        cd ../../
        mkdir go-swagger
        pwd
        ls
        cd go-swagger
        git clone https://github.com/go-swagger/go-swagger.git
        cd go-swagger && git checkout tags/0.5.0

    - script:
      name: Generate Code
      code: |
        cd $WERCKER_SOURCE_DIR
        wget https://github.com/go-swagger/go-swagger/releases/download/0.5.0/swagger_linux_amd64 
        chmod +x swagger_linux_amd64
        ./swagger_linux_amd64 generate client swagger.json
      
    - wercker/golint

    - script:
      name: go get
      code: |
        cd $WERCKER_SOURCE_DIR
        go get -t ./...


    - script:
      name: go test
      code: go test ./...

    - script:
      name: go build
      code: |
        go build -a -o sd
        mv sd $ORG_SOURCE

deploy:
  steps:
    # Add our deploy key to SSH
    - add-ssh-key:
      keyname: GIT_KEY

    - install-packages:
        packages: openssh-client

    # Add GitHub's SSH fingerprint to SSH known_hosts
    - add-to-known_hosts:
      hostname: github.com
      fingerprint: 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48
      type: rsa

    - script:
        name: download git version
        code: |
          wget $(wget -q -O - https://api.github.com/repos/screwdriver-cd/gitversion/releases/latest \
            | awk '/browser_download_url/ { print $2 }' \
            | sed 's/"//g') \
            && chmod +x gitversion

    - script: 
        name: bump the version
        code: export VERSION=$(./gitversion --prefix v bump patch)

    - script:
        name: push newly added tag
        code: git push origin --tags

    - github-create-release:
        token: $GITHUB_TOKEN
        tag: $VERSION

    - github-upload-asset:
        token: $GITHUB_TOKEN
        file: sd
        content_type: application/octet-stream
